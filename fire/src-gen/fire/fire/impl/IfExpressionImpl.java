/**
 * generated by Xtext 2.12.0
 */
package fire.fire.impl;

import fire.fire.ElseIfExpression;
import fire.fire.Expression;
import fire.fire.FirePackage;
import fire.fire.IfExpression;
import fire.fire.Statement;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getThenStatements <em>Then Statements</em>}</li>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getThenValue <em>Then Value</em>}</li>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getElseIfs <em>Else Ifs</em>}</li>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getElseStatements <em>Else Statements</em>}</li>
 *   <li>{@link fire.fire.impl.IfExpressionImpl#getElseValue <em>Else Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfExpressionImpl extends ExpressionImpl implements IfExpression
{
  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Expression condition;

  /**
   * The cached value of the '{@link #getThenStatements() <em>Then Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenStatements()
   * @generated
   * @ordered
   */
  protected EList<Statement> thenStatements;

  /**
   * The cached value of the '{@link #getThenValue() <em>Then Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenValue()
   * @generated
   * @ordered
   */
  protected Expression thenValue;

  /**
   * The cached value of the '{@link #getElseIfs() <em>Else Ifs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseIfs()
   * @generated
   * @ordered
   */
  protected EList<ElseIfExpression> elseIfs;

  /**
   * The cached value of the '{@link #getElseStatements() <em>Else Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseStatements()
   * @generated
   * @ordered
   */
  protected EList<Statement> elseStatements;

  /**
   * The cached value of the '{@link #getElseValue() <em>Else Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseValue()
   * @generated
   * @ordered
   */
  protected Expression elseValue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FirePackage.Literals.IF_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Expression newCondition, NotificationChain msgs)
  {
    Expression oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCondition(Expression newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Statement> getThenStatements()
  {
    if (thenStatements == null)
    {
      thenStatements = new EObjectContainmentEList<Statement>(Statement.class, this, FirePackage.IF_EXPRESSION__THEN_STATEMENTS);
    }
    return thenStatements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getThenValue()
  {
    return thenValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenValue(Expression newThenValue, NotificationChain msgs)
  {
    Expression oldThenValue = thenValue;
    thenValue = newThenValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__THEN_VALUE, oldThenValue, newThenValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setThenValue(Expression newThenValue)
  {
    if (newThenValue != thenValue)
    {
      NotificationChain msgs = null;
      if (thenValue != null)
        msgs = ((InternalEObject)thenValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__THEN_VALUE, null, msgs);
      if (newThenValue != null)
        msgs = ((InternalEObject)newThenValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__THEN_VALUE, null, msgs);
      msgs = basicSetThenValue(newThenValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__THEN_VALUE, newThenValue, newThenValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ElseIfExpression> getElseIfs()
  {
    if (elseIfs == null)
    {
      elseIfs = new EObjectContainmentEList<ElseIfExpression>(ElseIfExpression.class, this, FirePackage.IF_EXPRESSION__ELSE_IFS);
    }
    return elseIfs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Statement> getElseStatements()
  {
    if (elseStatements == null)
    {
      elseStatements = new EObjectContainmentEList<Statement>(Statement.class, this, FirePackage.IF_EXPRESSION__ELSE_STATEMENTS);
    }
    return elseStatements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getElseValue()
  {
    return elseValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseValue(Expression newElseValue, NotificationChain msgs)
  {
    Expression oldElseValue = elseValue;
    elseValue = newElseValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__ELSE_VALUE, oldElseValue, newElseValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElseValue(Expression newElseValue)
  {
    if (newElseValue != elseValue)
    {
      NotificationChain msgs = null;
      if (elseValue != null)
        msgs = ((InternalEObject)elseValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__ELSE_VALUE, null, msgs);
      if (newElseValue != null)
        msgs = ((InternalEObject)newElseValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FirePackage.IF_EXPRESSION__ELSE_VALUE, null, msgs);
      msgs = basicSetElseValue(newElseValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FirePackage.IF_EXPRESSION__ELSE_VALUE, newElseValue, newElseValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FirePackage.IF_EXPRESSION__CONDITION:
        return basicSetCondition(null, msgs);
      case FirePackage.IF_EXPRESSION__THEN_STATEMENTS:
        return ((InternalEList<?>)getThenStatements()).basicRemove(otherEnd, msgs);
      case FirePackage.IF_EXPRESSION__THEN_VALUE:
        return basicSetThenValue(null, msgs);
      case FirePackage.IF_EXPRESSION__ELSE_IFS:
        return ((InternalEList<?>)getElseIfs()).basicRemove(otherEnd, msgs);
      case FirePackage.IF_EXPRESSION__ELSE_STATEMENTS:
        return ((InternalEList<?>)getElseStatements()).basicRemove(otherEnd, msgs);
      case FirePackage.IF_EXPRESSION__ELSE_VALUE:
        return basicSetElseValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FirePackage.IF_EXPRESSION__CONDITION:
        return getCondition();
      case FirePackage.IF_EXPRESSION__THEN_STATEMENTS:
        return getThenStatements();
      case FirePackage.IF_EXPRESSION__THEN_VALUE:
        return getThenValue();
      case FirePackage.IF_EXPRESSION__ELSE_IFS:
        return getElseIfs();
      case FirePackage.IF_EXPRESSION__ELSE_STATEMENTS:
        return getElseStatements();
      case FirePackage.IF_EXPRESSION__ELSE_VALUE:
        return getElseValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FirePackage.IF_EXPRESSION__CONDITION:
        setCondition((Expression)newValue);
        return;
      case FirePackage.IF_EXPRESSION__THEN_STATEMENTS:
        getThenStatements().clear();
        getThenStatements().addAll((Collection<? extends Statement>)newValue);
        return;
      case FirePackage.IF_EXPRESSION__THEN_VALUE:
        setThenValue((Expression)newValue);
        return;
      case FirePackage.IF_EXPRESSION__ELSE_IFS:
        getElseIfs().clear();
        getElseIfs().addAll((Collection<? extends ElseIfExpression>)newValue);
        return;
      case FirePackage.IF_EXPRESSION__ELSE_STATEMENTS:
        getElseStatements().clear();
        getElseStatements().addAll((Collection<? extends Statement>)newValue);
        return;
      case FirePackage.IF_EXPRESSION__ELSE_VALUE:
        setElseValue((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FirePackage.IF_EXPRESSION__CONDITION:
        setCondition((Expression)null);
        return;
      case FirePackage.IF_EXPRESSION__THEN_STATEMENTS:
        getThenStatements().clear();
        return;
      case FirePackage.IF_EXPRESSION__THEN_VALUE:
        setThenValue((Expression)null);
        return;
      case FirePackage.IF_EXPRESSION__ELSE_IFS:
        getElseIfs().clear();
        return;
      case FirePackage.IF_EXPRESSION__ELSE_STATEMENTS:
        getElseStatements().clear();
        return;
      case FirePackage.IF_EXPRESSION__ELSE_VALUE:
        setElseValue((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FirePackage.IF_EXPRESSION__CONDITION:
        return condition != null;
      case FirePackage.IF_EXPRESSION__THEN_STATEMENTS:
        return thenStatements != null && !thenStatements.isEmpty();
      case FirePackage.IF_EXPRESSION__THEN_VALUE:
        return thenValue != null;
      case FirePackage.IF_EXPRESSION__ELSE_IFS:
        return elseIfs != null && !elseIfs.isEmpty();
      case FirePackage.IF_EXPRESSION__ELSE_STATEMENTS:
        return elseStatements != null && !elseStatements.isEmpty();
      case FirePackage.IF_EXPRESSION__ELSE_VALUE:
        return elseValue != null;
    }
    return super.eIsSet(featureID);
  }

} //IfExpressionImpl
